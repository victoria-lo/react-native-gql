{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../App\";\nimport { useQuery } from \"@apollo/client\";\nimport { COUNTRY_QUERY } from \"./gql/Query\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CountryItem = function CountryItem(_ref) {\n  var country = _ref.country;\n  var name = country.name,\n      code = country.code;\n  return _jsx(Pressable, {\n    style: styles.item,\n    children: _jsx(Text, {\n      style: styles.header,\n      children: name\n    })\n  });\n};\n\nexport default function CountriesScreen(props) {\n  var _useQuery = useQuery(COUNTRY_QUERY, {\n    variables: {\n      \"code\": props.code\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return _jsx(Text, {\n      children: \"Fetching data...\"\n    });\n  }\n\n  return _jsx(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: props.modalVisible,\n    onRequestClose: function onRequestClose() {\n      props.setModalVisible(!props.modalVisible);\n    },\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(FlatList, {\n          data: data.continent.countries,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(CountryItem, {\n              country: item\n            });\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return index;\n          }\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return props.setModalVisible(!props.modalVisible);\n          },\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: \"CLOSE\"\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["styles","useQuery","COUNTRY_QUERY","CountryItem","country","name","code","item","header","CountriesScreen","props","variables","data","loading","modalVisible","setModalVisible","container","modalView","continent","countries","index","button","textStyle"],"sources":["D:/Projects/react-native-gql/src/CountriesScreen.js"],"sourcesContent":["import { Text, FlatList, Pressable, Modal, View} from \"react-native\";\r\nimport { styles } from \"../App\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { COUNTRY_QUERY } from \"./gql/Query\";\r\n\r\nconst CountryItem = ({ country }) => {\r\n  const { name, code } = country;\r\n  return (\r\n    <Pressable style={styles.item}>\r\n      <Text style={styles.header}>{name}</Text>\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nexport default function CountriesScreen(props) {\r\n  const { data, loading } = useQuery(COUNTRY_QUERY, {\r\n    variables: {\r\n      \"code\": props.code,\r\n    },\r\n  });\r\n\r\n  if (loading) {\r\n    return <Text>Fetching data...</Text>;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={props.modalVisible}\r\n      onRequestClose={() => {\r\n        props.setModalVisible(!props.modalVisible);\r\n      }}\r\n    >\r\n      <View style={styles.container}>\r\n        <View style={styles.modalView}>\r\n          <FlatList\r\n            data={data.continent.countries}\r\n            renderItem={({ item }) => <CountryItem country={item} />}\r\n            keyExtractor={(item, index) => index}\r\n          />\r\n          <Pressable style={styles.button} onPress={() => props.setModalVisible(!props.modalVisible)}>\r\n            <Text style={styles.textStyle}>CLOSE</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\n"],"mappings":";;;;;AACA,SAASA,MAAT;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAiB;EAAA,IAAdC,OAAc,QAAdA,OAAc;EACnC,IAAQC,IAAR,GAAuBD,OAAvB,CAAQC,IAAR;EAAA,IAAcC,IAAd,GAAuBF,OAAvB,CAAcE,IAAd;EACA,OACE,KAAC,SAAD;IAAW,KAAK,EAAEN,MAAM,CAACO,IAAzB;IAAA,UACE,KAAC,IAAD;MAAM,KAAK,EAAEP,MAAM,CAACQ,MAApB;MAAA,UAA6BH;IAA7B;EADF,EADF;AAKD,CAPD;;AASA,eAAe,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;EAC7C,gBAA0BT,QAAQ,CAACC,aAAD,EAAgB;IAChDS,SAAS,EAAE;MACT,QAAQD,KAAK,CAACJ;IADL;EADqC,CAAhB,CAAlC;EAAA,IAAQM,IAAR,aAAQA,IAAR;EAAA,IAAcC,OAAd,aAAcA,OAAd;;EAMA,IAAIA,OAAJ,EAAa;IACX,OAAO,KAAC,IAAD;MAAA;IAAA,EAAP;EACD;;EAED,OACE,KAAC,KAAD;IACE,aAAa,EAAC,OADhB;IAEE,WAAW,EAAE,IAFf;IAGE,OAAO,EAAEH,KAAK,CAACI,YAHjB;IAIE,cAAc,EAAE,0BAAM;MACpBJ,KAAK,CAACK,eAAN,CAAsB,CAACL,KAAK,CAACI,YAA7B;IACD,CANH;IAAA,UAQE,KAAC,IAAD;MAAM,KAAK,EAAEd,MAAM,CAACgB,SAApB;MAAA,UACE,MAAC,IAAD;QAAM,KAAK,EAAEhB,MAAM,CAACiB,SAApB;QAAA,WACE,KAAC,QAAD;UACE,IAAI,EAAEL,IAAI,CAACM,SAAL,CAAeC,SADvB;UAEE,UAAU,EAAE;YAAA,IAAGZ,IAAH,SAAGA,IAAH;YAAA,OAAc,KAAC,WAAD;cAAa,OAAO,EAAEA;YAAtB,EAAd;UAAA,CAFd;UAGE,YAAY,EAAE,sBAACA,IAAD,EAAOa,KAAP;YAAA,OAAiBA,KAAjB;UAAA;QAHhB,EADF,EAME,KAAC,SAAD;UAAW,KAAK,EAAEpB,MAAM,CAACqB,MAAzB;UAAiC,OAAO,EAAE;YAAA,OAAMX,KAAK,CAACK,eAAN,CAAsB,CAACL,KAAK,CAACI,YAA7B,CAAN;UAAA,CAA1C;UAAA,UACE,KAAC,IAAD;YAAM,KAAK,EAAEd,MAAM,CAACsB,SAApB;YAAA;UAAA;QADF,EANF;MAAA;IADF;EARF,EADF;AAuBD"},"metadata":{},"sourceType":"module"}